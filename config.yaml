# Anchore Feeds Service Configuration File

 # General system-wide configuration options, these should not need to
 # be altered for basic operation
 #
 # service_dir: '/config'
 # tmp_dir: '/tmp'

 log_level: 'DEBUG'
 host_id: 'dockerhostid-xyz'
 internal_ssl_verify: False

 credentials:
   database:
     db_connect: 'postgresql+pg8000://postgres:mysecretpassword@anchore-feeds-db:5432/postgres'
     db_connect_args:
       timeout: 120
       ssl: False
     db_pool_size: 30
     db_pool_max_overflow: 100

 services:
   feeds:
     enabled: True
     require_auth: False
     endpoint_hostname: 'localhost'
     listen: '0.0.0.0'
     port: 8448
     # Time delay in seconds between consecutive driver runs for processing data
     cycle_timer_seconds: 7200
     # Staging space for holding normalized output from drivers. Persisted using a bind mounted volume defined in docker-compose
     local_workspace: '/workspace'
     # Drivers process data from external sources and store normalized data in local_workspace. Processing large data sets
     # is a time consuming process for some drivers. To speed it up the container is shipped with pre-loaded data which is used
     # by default if local_workspace is empty.
     workspace_preload:
       # Uncomment to not use pre-loaded data if local_workspace is empty. Drivers will generate normalized data from scratch
       #disabled: True
       # To load the workspace from a different location, uncomment and configure workspace_preload_file property to point to the tar.gz file
       workspace_preload_file: '/workspace_preload/data.tar.gz'
     # If api_only is set to True, the service will not update feed data in the system.
     # API end points will be functional and serve feed data if any is available.
     #api_only: True
     drivers:
       # Configuration section for drivers collecting and processing feed data.
       # All drivers are enabled by default unless explicitly disabled. npm and gem drivers are explicitly disabled out of the box
       npm:
         disabled: True
       gem:
         # rubygem data comes packaged as a PostgreSQL dump file. gem driver loads the pg dump and normalizes the data.
         # To enable gem driver comment the disabled property and uncomment the db_connect property. In addition,
         # uncomment the anchore-gem-db section in docker-compose.yaml
         disabled: True
         #db_connect: 'postgresql+pg8000://postgres:mysecretpassword@anchore-gem-db:5432/rubygems'
       #centos:
       #  disabled: True
       #debian:
       #  disabled: True
       #ubuntu:
       #  disabled: True
       #ol:
       #  disabled: True
       #alpine:
       #  disabled: True
